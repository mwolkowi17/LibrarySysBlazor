@page "/rent"
@using System.Net.Http
@inject HttpClient Http


<div class="container">
    <div class="row">
        <div class="col">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title"> Rent a book</h5>
                    <div class="row">
                        <div class="col m-3">
                            <input class="form-control " placeholder="Book ID" @bind="InputAValue">
                        </div>
                        <div class="col m-3">
                            <h5> Book ID</h5>

                        </div>
                    </div>
                    <div class="row">
                        <div class="col m-3">
                            <input class="form-control" placeholder="Reader ID" @bind="InputBValue">
                        </div>
                        <div class="col m-3">
                            <h5> Reader ID</h5>
                  
                        </div>
                        
                    </div>
                    <div class="row">
                        
                    </div>
                    <div class="row">
                        <div class="col m-3">
                            <button type="button" class="btn btn-outline-primary" @onclick="selectBook">Select</button>
                        </div>
                        <div class="col">

                        </div>
                    </div>        
                </div>
            </div>
        </div>
        <div class="col">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title"> Selected Book</h5>
                    <div class="row m-3">
                    <h5>Book: <b>@ShowedValueA</b></h5>
                    </div>
                    <div class="row m-3">
                    <h5>User: <b>@ShowedValueB</b></h5>
                    </div>
                    <div class="row m-3">
                        <div class="col m3">
                            <button type="button" class="btn btn-outline-primary" @onclick="SaveItem">Rent this book</button>
                       </div>
                       <div class="col m3">
                           <button type="button" class="btn btn-outline-primary" @onclick="CancelSelection" >Cancel</button>
                       </div>
                        
                    </div>
                    <div class="row m-3">
                    <h5><b>@ShowedValueC</b></h5>
                    </div>  
                </div>
            </div>
        </div>
    </div>
</div>

@code {
private int InputAValue {get; set;}
private int InputBValue {get; set;}

public string ShowedValueA=null;

public string ShowedValueB=null;

public string ShowedValueC=null;
 private BookList[] listofbooks;
 private ReadersList[] listofreaders;
    protected override async Task OnInitializedAsync()
    {
        listofbooks = await Http.GetFromJsonAsync<BookList[]>("https://localhost:44381/api/BookCs");
        listofreaders = await Http.GetFromJsonAsync<ReadersList[]>("https://localhost:44381/api/Readers");
    }
 private BookList roboczabook;
 private ReadersList roboczyreader;


private async Task SaveItem(){
    await Http.PutAsJsonAsync($"https://localhost:44381/api/BookCs/{InputAValue}",roboczabook);
    ShowedValueC="Book has been rented";
}
 public void selectBook(){
        foreach(BookList n in listofbooks){
            if(n.BookCID==InputAValue){
                roboczabook=n;
            }
        }
        foreach(ReadersList m in listofreaders){
            if(m.ReaderID==InputBValue){
                roboczyreader=m;
            }
        }
        if(roboczabook!=null){
           ShowedValueA=roboczabook.TitleC+" - "+roboczabook.AuthorC; 
           roboczabook.Rented=true;
           roboczabook.RentedbyReader=roboczyreader.ReaderID;
        }
        if(roboczyreader!=null){
            ShowedValueB=roboczyreader.Name+" "+roboczyreader.Surname;
        }
       // ShowedValueB=roboczyreader.Name+" "+roboczyreader.Surname;
 }    

 public void CancelSelection(){
     ShowedValueA=null;
     ShowedValueB=null;
 }
 public class BookList
    {
        public int BookCID { get; set; }
        public string TitleC { get; set; }
        public string AuthorC { get; set; }
        public bool Rented { get; set; }
        public int RentedbyReader { get; set; }
    }

public class ReadersList
    {
        public int ReaderID { get; set; }
        public string Name { get; set; }
        public string Surname { get; set; }
        public string Alias {get;set;}
    }
}